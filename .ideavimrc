set laststatus=2
set hlsearch
set ignorecase
set incsearch
set showcmd
set showmode
set smartcase

nnoremap ,ev :e ~/.ideavimrc<CR>
nnoremap ,sv :source ~/.ideavimrc<CR>

map ,y "+y
map ,p "*p==
map gU gUiw
noremap Y y$
nnoremap ' `
nnoremap ` '
nnoremap n nzz
nnoremap N Nzz
nnoremap vv ggVG
nnoremap U :action Vcs.RollbackChangedLines<CR>

nmap zj m'o<Esc>`'
nmap zk m'O<Esc>`'
nmap zi :action EditorIncreaseFontSize<CR>
nmap zo :action EditorDecreaseFontSize<CR>

vnoremap < <gv
vnoremap > >gv

cnoremap <C-h> <BS>

noremap <A-j> :action MethodDown<CR>
noremap <A-k> :action MethodUp<CR>

noremap <S-A-j> :action MoveStatementDown<CR>
noremap <S-A-k> :action MoveStatementUp<CR>
noremap <C-S-o> :action OverrideMethods<CR>
noremap <C-S-i> :action ImplementMethods<CR>
noremap <C-S-h> gT
noremap <C-S-l> gt
" Identifier Highlighter Reloaded plugin mapping
" Wait till original Identifier Highlighter plugin will be fixed
noremap <C-S-j> :action NextIdentifierReloaded<CR>
noremap <C-S-k> :action PreviousIdentifierReloaded<CR>

nmap gcc :action CommentByLineComment<CR>

" unite.vim (lists)
noremap <Space>b :action Switcher<CR>
noremap <Space>m :action RecentFiles<CR>
noremap <Space>c :action GotoClass<CR>
noremap <Space>f :action GotoFile<CR>
noremap <Space>g :action FindInPath<CR>
" unite outline
noremap <Space>o :action FileStructurePopup<CR>
noremap <Space>u :action FindUsages<CR>

" Do I really need this?
nmap gm :action ToggleBookmark<CR>
nmap gM :action ShowBookmarks<CR>
nmap gn :action GotoNextBookmark<CR>
nmap gp :action GotoPreviousBookmark<CR>

noremap gh :action HideAllWindows<CR>

" Mnemonic: 'to'
nnoremap td :action GotoTypeDeclaration<CR>
nnoremap ti :action GotoImplementation<CR>
nnoremap ts :action GotoSuperMethod<CR>
nnoremap tt :action GotoTest<CR>
nnoremap tu :action ShowUsages<CR>
nnoremap te :action GotoNextError<CR>
nnoremap tc gg<Bar>/ class<CR>:nohlsearch<CR>zz

"noremap <C-j> <C-W>j
"noremap <C-k> <C-W>k
"noremap <C-l> <C-W>l
"noremap <C-h> <C-W>h

" Additional <ESC> required
" noremap / :action Find<CR>
" noremap n :action FindNext<CR>
" noremap N :action FindPrevious<CR>

" native back/forward is less buggy, <C-t> still useful
noremap <C-o> :action Back<CR>
noremap <C-i> :action Forward<CR>

" Mnemonic 'extract'
nnoremap ,em :action ExtractMethod<CR>
vnoremap ,em :action ExtractMethod<CR>
noremap ,ec :action ExtractClass<CR>

nnoremap ,nd :action NewDir<CR>
nnoremap ,nc :action NewClass<CR>

nnoremap ,q' ciw''<Esc>P
nnoremap ,q" ciw""<Esc>P

" Mnemonic 'generate'
noremap ,gc :action IntroduceConstant<CR>
noremap ,gf :action IntroduceField<CR>
noremap ,gp :action IntroduceParameter<CR>
noremap ,gv :action IntroduceVariable<CR>
noremap ,gg :action GenerateGetter<CR>
noremap ,gs :action GenerateSetter<CR>
noremap ,ga :action GenerateGetterAndSetter<CR>

" EasyMotion (AceJump plugin)
nmap ,, :action AceJumpAction<cr>
nmap RR :action Refactorings.QuickListPopupAction<CR>

" Common
noremap ,a :action Annotate<CR>
noremap ,c :action CheckinProject<CR>
noremap ,u :action Vcs.UpdateProject<CR>
noremap ,b :action ToggleLineBreakpoint<CR>
noremap ,h <C-w>s
noremap ,i :action Inline<CR>
noremap ,k :q<CR>
noremap ,m :action Move<CR>
noremap ,r :action RenameElement<CR>
noremap ,v <C-w>v
noremap ,/ :nohlsearch<CR>