set laststatus=2
set hlsearch
set ignorecase
set incsearch
set showcmd
set showmode
set smartcase

let mapleader=","

nnoremap <Space> <nop>
nnoremap <leader>ev :e ~/.ideavimrc<CR>
nnoremap <leader>sv :source ~/.ideavimrc<CR>

map <leader>y "+y
map <leader>p "*p==
map <leader>P a<space><esc>p

noremap Y y$
nnoremap ' `
nnoremap ` '
nnoremap n nzz
nnoremap N Nzz
nnoremap vv ggVG
nnoremap U :action Vcs.RollbackChangedLines<CR>

nmap z+ :action EditorIncreaseFontSize<CR>
nmap z- :action EditorDecreaseFontSize<CR>

vnoremap < <gv
vnoremap > >gv

" unimpaired legacy
noremap ]m :action MethodDown<CR>
noremap [m :action MethodUp<CR>
noremap ]l :action GotoNextError<CR>:action ShowErrorDescription<CR>
noremap [l :action GotoPreviousError<CR>:action ShowErrorDescription<CR>
noremap [b gT
noremap ]b gt
" camelcase words: ] - forward, [ - backward
noremap [w [b
noremap ]w [w
noremap [c :action VcsShowPrevChangeMarker<CR>
noremap ]c :action VcsShowNextChangeMarker<CR>
nnoremap [<Space> O<ESC>j 0 w
nnoremap ]<Space> o<ESC>k 0 w

noremap <S-A-j> :action MoveStatementDown<CR>
noremap <S-A-k> :action MoveStatementUp<CR>
xnoremap <C-S-o> :action OverrideMethods<CR>
xnoremap <C-S-i> :action ImplementMethods<CR>
noremap <C-S-h> gT
noremap <C-S-l> gt
" Identifier Highlighter Reloaded plugin mapping
" Wait till original Identifier Highlighter plugin will be fixed
noremap <C-S-j> :action NextIdentifierReloaded<CR>
noremap <C-S-k> :action PreviousIdentifierReloaded<CR>

nmap gcc :action CommentByLineComment<CR>

" unite.vim (lists)
noremap <Space>b :action Switcher<CR>
noremap <Space>m :action RecentFiles<CR>
noremap <Space>c :action GotoClass<CR>
noremap <Space>f :action GotoFile<CR>
noremap <Space>g :action FindInPath<CR>
" unite outline
noremap <Space>o :action FileStructurePopup<CR>
noremap <Space>u :action FindUsages<CR>
noremap <Space>w :action SelectIn<CR>

" Do I really need this?
nmap gm :action ToggleBookmark<CR>
nmap gM :action ShowBookmarks<CR>
nmap gn :action GotoNextBookmark<CR>
nmap gp :action GotoPreviousBookmark<CR>

noremap gh :action HideAllWindows<CR>

" Mnemonic: 'to'
nnoremap td :action GotoTypeDeclaration<CR>
nnoremap ti :action GotoImplementation<CR>
nnoremap ts :action GotoSuperMethod<CR>
nnoremap tt :action GotoTest<CR>
nnoremap tu :action ShowUsages<CR>
nnoremap te :action GotoNextError<CR>
nnoremap tc gg<Bar>:action MethodDown<CR>zz

"noremap <C-j> <C-W>j
"noremap <C-k> <C-W>k
"noremap <C-l> <C-W>l
"noremap <C-h> <C-W>h

" Additional <ESC> required
" noremap / :action Find<CR>
" noremap n :action FindNext<CR>
" noremap N :action FindPrevious<CR>

" native back/forward is less buggy<leader> <C-t> still useful
noremap <C-o> :action Back<CR>
noremap <C-i> :action Forward<CR>

" Mnemonic 'extract'
nnoremap <leader>em :action ExtractMethod<CR>
vnoremap <leader>em :action ExtractMethod<CR>
noremap <leader>ec :action ExtractClass<CR>

nnoremap <leader>nd :action NewDir<CR>
nnoremap <leader>nc :action NewClass<CR>

nnoremap <leader>q' ciw''<Esc>P
nnoremap <leader>q" ciw""<Esc>P

" Mnemonic 'generate'
noremap <leader>gc :action IntroduceConstant<CR>
noremap <leader>gf :action IntroduceField<CR>
noremap <leader>gp :action IntroduceParameter<CR>
noremap <leader>gv :action IntroduceVariable<CR>
noremap <leader>gg :action GenerateGetter<CR>
noremap <leader>gs :action GenerateSetter<CR>
noremap <leader>ga :action GenerateGetterAndSetter<CR>

" EasyMotion (AceJump plugin)
nmap <leader><leader> :action AceJumpAction<cr>
nmap RR :action Refactorings.QuickListPopupAction<CR>

" Common
noremap <leader>a :action Annotate<CR>
noremap <leader>c :action CheckinProject<CR>
noremap <leader>u :action Vcs.UpdateProject<CR>
noremap <leader>b :action ToggleLineBreakpoint<CR>
noremap <leader>h <C-w>s
" Fold variable, method
noremap <leader>i :action Inline<CR>
noremap <leader>k :q<CR>
noremap <leader>m :action Move<CR>
noremap <leader>r :action RenameElement<CR>
noremap <leader>v <C-w>v
noremap <leader>/ :nohlsearch<CR>